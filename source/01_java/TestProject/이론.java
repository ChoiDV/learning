
public class 이론 {

	
	// 메소드로 기초형 변수가 전달되는 경우 
	
		//기초형 변수가 전달되는 경우 : 기초 변수의 값을 매개변수로 복사합니다. 복사해서 전달
	
	// 메소드로 객체가 전달되는 경우   
	// 객체를 메소드로 전달하게 되면 객체가 복사되어 전달되는 것이 아니고 참조 변수의 값이 복사되어서 전달된다.
	
	
	// 메소드로 배열이 전달되는 경우
	// 참조변수가 넘어감    // ArrayProc, ArrayProcTest
	
	
	// 메소드에서 객체 반환하기
	// 반환할때 return 클래스이름 이렇게 해줘야댐
	// 이 경우에도 참조값을 반환함    // Box, BoxTest
	
	
	// 같은 크기의 BOX 인지 확인하기  
	//  BoxTest2
	
	
	
	
	// 정적 멤버 
	// 정적 멤버(static member) 는 모든 객체를 통틀어서 하나만 생성되고 모든 객체가 이것을 공유하게 된다.
	//  static member : 공유 멤버 or 클래스 멤버  라고 생각해도됌.
	// 
	
	
	//  멤버    1. 인스턴스 멤버
	//         2. 정적 멤버
	// static 은 하나의 클래스에 하나만 만들수 있음
	// 이거 연습 Car2, Car2Test
	
	
	
	
	
	
	// 정적 메소드
	// 변수와 마찬가지로 메소드도 정적 메소드로 만들 수 있다.
	// 정적 메소드는 static 수식자를 메소드 앞에 붙이며 클래스 이름을 통하여 호출되어야 한다.
	
	
	// 정적 초기화 : 정적 변수를 초기화 하는것.  MyClass 에서 연습함.
	
	
	// 내장 클래스 : 자바에서는 클래스 안에서 클래스를 정의 할 수 있다.
	// 클래스 안에서 클래스를 선언하는것
	// ex) OuterClass 에서 실습
	
	
	
	// 내부 클래스 : 게임에서 캐릭터가 여러가지 아이템을 가지고 있다. 이것을코드로 구현하여 보자.
	// GameCharacter
	
	
	
	// 지역 클래스 localInnerTest
	
	// 메인 함수가 들어간것이 파일 이름이여야됌
	

	
	
	
	
	
	
	
	
	
}
