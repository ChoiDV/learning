<가변인자함수>
매개변수의 개수가 변할 수 있는 함수를 가변인자함수라고 한다.
매개변수를 선언된 형태와 다르게 사용했을 때, 매개변수를 모두 활용할 수 있는 함수이다.

** Array() 함수 ** 
-사용법-
var arr1 = [ 273,2,3,'Hello'];  일반 배열 생성
var arr2 = Array(273,2,3,'Hello');  Array 함수를 사용한 배열 생성

:arr1과 arr2는 배열의 크기와 각 인덱스의 값들이 같다.

Array 함수는 매개변수로 들어온것들로 배열을 만들어주는 함수이다.
Array 함수는 매개변수가 2개이상 들어와야 배열을 만들어준다.
매개변수가 1개일 경우 빈방을 그 값만큼 만들어준다.

var arr3 = [, , ,];  방의 개수가 3개짜리인 빈 배열을 생성
var arr4 = Array(3);  방의 개수가 3개짜리인 빈 배열을 생성

:  arr3과 arr4 는 방의 개수가 3개이며 빈 배열이다.

매개변수를 넣지않으면 방의 개수가 0인 배열을 만든다.


** 가변인자함수 생성하기 ** 
Array() 함수 직접 만들기
  매개변수가 없을때 실행할 명령
  매개변수가 1개일때 실행할 명령
  매개변수가 2개 이상일 때 실행할 명령 
  이렇게 매개변수의 개수로 나누어 함수를 정의하기.
/*     arguments 는 매개변수로 배열형태로 만들어주는 객체이다.  (매개변수배열) */

function array() {
    var result = [];
  if ( arguments.length == 0 ) {
     여기는 매개변수가 없을때 실행할 명령들을 넣어준다.
  } else if ( arguments.length == 1) {
     매개변수가 1개 일때 실행할 명령들을 넣는다. 매개변수만큼 방의 개수를 만들어준다.
       for( var cnt=1; cnt < arguments[0]; cnt++){
	result.push(null);  // 반복문을 사용해 매개변수만큼의 반복문을 돌리고 result에 null을 넣어 result를 매개변수만큼의 크기의 빈 배열로 만들어준다.
  } else if ( arguments.length >= 2) {
     매개변수가 2개 이상일 때 실행할 명령들
       for ( var idx=0; idx < arguments.length; idx++ ) {
	result.push(arguments[idx] );
 	// 매개변수만큼의 반복문을 돌리고 result에 arguments의 0번 인덱스부터 매개변수 크기만큼 넣어서
	// result를 매개변수 크기 만큼의 방 개수와 각 방에 매개변수들을 넣어준다.      
    }
}
	return result;   // 매개변수의 크기만큼 실행후 그 값을 return 해준다.
}


